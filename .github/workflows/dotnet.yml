# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: ["main"]

env:
  PROJECT_NAME: "ProximityChat"
  OUTPUT_PATH: "./bin/ProximityChat"

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore
        run: dotnet restore

      - name: Extract version from .csproj
        id: extract_version
        run: echo "version=$(grep -oPm1 '(?<=<Version>)[^<]+' ProximityChat.csproj)" >> $GITHUB_OUTPUT

      - name: Set version env
        run: echo "VERSION=${{ steps.extract_version.outputs.version }}" >> $GITHUB_ENV

      - name: Build
        run: dotnet publish -c Release -o ${{ env.OUTPUT_PATH }} -p:Version=${{ env.VERSION }}

      - name: List files after build
        run: ls -R ${{ github.workspace }}/bin/ProximityChat

      - name: Zip
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: "zip"
          filename: "${{ env.PROJECT_NAME }}-${{ env.VERSION }}.zip"
          path: |
            ${{ github.workspace }}/bin/ProximityChat/ProximityChat.dll
            ${{ github.workspace }}/bin/ProximityChat/ProximityChat.pdb
            ${{ github.workspace }}/bin/ProximityChat/ProximityChat.deps.json
            ${{ github.workspace }}/bin/ProximityChat/MySqlConnector.dll
            ${{ github.workspace }}/bin/ProximityChat/Nexd.MySQL.dll

      - name: Release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: ${{ env.PROJECT_NAME }}-${{ env.VERSION }}.zip
          name: "Version ${{ env.VERSION }}"
          tag: "v${{ env.VERSION }}"
          body: |
            Place the `ProximityChat` plugin folder in `game/csgo/addons/counterstrikesharp/plugins/`
